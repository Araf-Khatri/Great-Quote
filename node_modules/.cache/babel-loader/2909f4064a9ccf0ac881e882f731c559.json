{"ast":null,"code":"var _jsxFileName = \"/home/linux/Desktop/Araf/complete-React-JS/s20.2-ReactRouterV5-Project/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\"; // const DUMMY_QUOTES = [\n//   { id: \"q1\", author: \"max\", text: \"Learning react is fun!\" },\n//   { id: \"q2\", author: \"araf\", text: \"Learning react is great!\" },\n//   { id: \"q3\", author: \"araf\", text: \"just a test data\" },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!loadedQuote.text) {\n    return /*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: \"No Quote Found\",\n      author: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"9oA6TaFDNtyzXPIyN8bTJvanQSo=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","useEffect","Route","useParams","Link","useRouteMatch","HighlightedQuote","Comments","useHttp","getSingleQuote","LoadingSpinner","QuoteDetail","match","params","quoteId","sendRequest","status","data","loadedQuote","error","text","author","path","url"],"sources":["/home/linux/Desktop/Araf/complete-React-JS/s20.2-ReactRouterV5-Project/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\n\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\n// const DUMMY_QUOTES = [\n//   { id: \"q1\", author: \"max\", text: \"Learning react is fun!\" },\n//   { id: \"q2\", author: \"araf\", text: \"Learning react is great!\" },\n//   { id: \"q3\", author: \"araf\", text: \"just a test data\" },\n// ];\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return <div className=\"centered\">\n      <LoadingSpinner />\n    </div>\n  }\n  if (error) {\n    return <p className=\"centered\">{error}</p>\n  }\n\n  if (!loadedQuote.text) {\n    return <HighlightedQuote text=\"No Quote Found\" author=\"\" />;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      \n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n\n      {/* NOTE */}\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n      {/* <Route path={`/quotes/${params.quoteId}/comments`} >\n        <Comments />\n      </Route> */}\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AAEA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,cAAP,MAA2B,iCAA3B,C,CAEA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAMC,KAAK,GAAGP,aAAa,EAA3B;EACA,MAAMQ,MAAM,GAAGV,SAAS,EAAxB;EAEA,MAAM;IAAEW;EAAF,IAAcD,MAApB;EAEA,MAAM;IAAEE,WAAF;IAAeC,MAAf;IAAuBC,IAAI,EAAEC,WAA7B;IAA0CC;EAA1C,IAAoDX,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAAjE;EAEAR,SAAS,CAAC,MAAM;IACdc,WAAW,CAACD,OAAD,CAAX;EACD,CAFQ,EAEN,CAACC,WAAD,EAAcD,OAAd,CAFM,CAAT;;EAIA,IAAIE,MAAM,KAAK,SAAf,EAA0B;IACxB,oBAAO;MAAK,SAAS,EAAC,UAAf;MAAA,uBACL,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADK;MAAA;MAAA;MAAA;IAAA,QAAP;EAGD;;EACD,IAAIG,KAAJ,EAAW;IACT,oBAAO;MAAG,SAAS,EAAC,UAAb;MAAA,UAAyBA;IAAzB;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,IAAI,CAACD,WAAW,CAACE,IAAjB,EAAuB;IACrB,oBAAO,QAAC,gBAAD;MAAkB,IAAI,EAAC,gBAAvB;MAAwC,MAAM,EAAC;IAA/C;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE,QAAC,QAAD;IAAA,wBACE,QAAC,gBAAD;MAAkB,IAAI,EAAEF,WAAW,CAACE,IAApC;MAA0C,MAAM,EAAEF,WAAW,CAACG;IAA9D;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,KAAD;MAAO,IAAI,EAAET,KAAK,CAACU,IAAnB;MAAyB,KAAK,MAA9B;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,IAAD;UAAM,SAAS,EAAC,WAAhB;UAA4B,EAAE,EAAG,GAAEV,KAAK,CAACW,GAAI,WAA7C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF,eAYE,QAAC,KAAD;MAAO,IAAI,EAAG,GAAEX,KAAK,CAACU,IAAK,WAA3B;MAAA,uBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CA9CD;;GAAMX,W;UACUN,a,EACCF,S,EAI2CK,O;;;KANtDG,W;AAgDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}